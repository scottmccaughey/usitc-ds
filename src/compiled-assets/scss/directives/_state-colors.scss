/*
           888             888                                    888
           888             888                                    888
           888             888                                    888
  .d8888b  888888  8888b.  888888 .d88b.          .d8888b .d88b.  888  .d88b.  888d888 .d8888b
  88K      888        "88b 888   d8P  Y8b        d88P"   d88""88b 888 d88""88b 888P"   88K
  "Y8888b. 888    .d888888 888   88888888 888888 888     888  888 888 888  888 888     "Y8888b.
       X88 Y88b.  888  888 Y88b. Y8b.            Y88b.   Y88..88P 888 Y88..88P 888          X88
   88888P'  "Y888 "Y888888  "Y888 "Y8888          "Y8888P "Y88P"  888  "Y88P"  888      88888P'

  State Colors mixins

  state-error()
  state-info()
  state-success()
  state-warning()

  Include these to use standard state colors on an element.
*/

@mixin state-error {
  background-color: $color-state-error-background;
  border-color: $color-state-error-border;
  color: $color-state-error-text;

  a {
    color: $color-state-error-link;

    @supports (text-decoration-color: $color-state-error-link) {
      color: inherit;
      text-decoration-color: $color-state-error-link;
    }

    &:active,
    &:focus,
    &:hover {
      background-color: $color-state-error-hover-background;
      color: $color-state-error-hover-text;
    }
  }

  .panel-header,
  .panel-header:first-child {
    background-color: $color-state-error-hover-background;
    color: $color-state-error-hover-text;
  }
}

@mixin state-info {
  background-color: $color-state-info-background;
  border-color: $color-state-info-border;
  color: $color-state-info-text;

  a {
    color: $color-state-info-link;

    @supports (text-decoration-color: $color-state-info-link) {
      color: inherit;
      text-decoration-color: $color-state-info-link;
    }

    &:active,
    &:focus,
    &:hover {
      background-color: $color-state-info-hover-background;
      color: $color-state-info-hover-text;
    }
  }

  .panel-header,
  .panel-header:first-child {
    background-color: $color-state-info-hover-background;
    color: $color-state-info-hover-text;
  }
}

@mixin state-success {
  background-color: $color-state-success-background;
  border-color: $color-state-success-border;
  color: $color-state-success-text;

  a {
    color: $color-state-success-link;

    @supports (text-decoration-color: $color-state-success-link) {
      color: inherit;
      text-decoration-color: $color-state-success-link;
    }

    &:active,
    &:focus,
    &:hover {
      background-color: $color-state-success-hover-background;
      color: $color-state-success-hover-text;
    }
  }

  .panel-header,
  .panel-header:first-child {
    background-color: $color-state-success-hover-background;
    color: $color-state-success-hover-text;
  }
}

@mixin state-warning {
  background-color: $color-state-warning-background;
  border-color: $color-state-warning-border;
  color: $color-state-warning-text;

  a {
    color: $color-state-warning-link;

    @supports (text-decoration-color: $color-state-warning-link) {
      color: inherit;
      text-decoration-color: $color-state-warning-link;
    }

    &:active,
    &:focus,
    &:hover {
      background-color: $color-state-warning-hover-background;
      color: $color-state-warning-hover-text;
    }
  }

  .panel-header,
  .panel-header:first-child {
    background-color: $color-state-warning-hover-background;
    color: $color-state-warning-hover-text;
  }
}
